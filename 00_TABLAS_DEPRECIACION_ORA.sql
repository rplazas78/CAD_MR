/**********************************************************************      
$Archive  : 00_TABLAS_DEPRECIACION_ORA.sql
$Revision : $      
$Author   : CAD      
$Modtime  : $       
$History  : $   Metodo de Reposicion (MR)   
**********************************************************************/  



/*
--TABLAS
MR_TB_ACTIVIDAD_OBRA_MATERIAL
MR_TB_ACT_OBR_COD_FICHA_COM
MR_TB_ACT_OBR_COD_FICHA_RES
MR_TB_CLASIFICACION_USOS
MR_TB_COMBINACION_USOS
MR_TB_COSTO_DIRECTO_DETALLE
MR_TB_DOMINIO_CAPITULO_OBRA
MR_TB_LIQUIDACION
MR_TB_LISTADO_MATERIAL_MANO_OBRA
MR_TB_PROCESO_CARGUE_ANUAL
MR_TB_PROCESO_LIQUIDACION
MR_TB_PUNTAJE_DEPRECIACION
MR_TB_REGLA_PRELIMINAR

MR_TB_TMP_ACTIVIDAD_OBRA_MATERIAL
MR_TB_TMP_ACT_OBR_COD_FICHA_COM
MR_TB_TMP_ACT_OBR_COD_FICHA_RES
MR_TB_TMP_CLASIFICACION_USOS
MR_TB_TMP_COMBINACION_USOS
MR_TB_TMP_DOMINIO_CAPITULO_OBRA
MR_TB_TMP_LIQ_CAPITULOS
MR_TB_TMP_MATERIAL_MANO_OBRA
MR_TB_TMP_PUNTAJE_DEPRECIACION
MR_TB_VIGENCIA

DROP TABLE MR_TB_LISTADO_MATERIAL_MANO_OBRA ;
DROP TABLE MR_TB_COMBINACION_USOS ;
DROP TABLE MR_TB_CLASIFICACION_USOS ;
DROP TABLE MR_TB_ACT_OBR_COD_FICHA_RES ;
DROP TABLE MR_TB_ACT_OBR_COD_FICHA_COM ;
DROP TABLE MR_TB_ACTIVIDAD_OBRA_MATERIAL ;
DROP TABLE MR_TB_PUNTAJE_DEPRECIACION ;
DROP TABLE MR_TB_TMP_LIQ_CAPITULOS;
DROP TABLE MR_TB_DOMINIO_CAPITULO_OBRA;
DROP TABLE MR_TB_COSTO_DIRECTO_DETALLE;
DROP TABLE MR_TB_PROCESO_CARGUE_ANUAL;
DROP TABLE MR_TB_TMP_ACTIVIDAD_OBRA_MATERIAL;
DROP TABLE MR_TB_TMP_ACT_OBR_COD_FICHA_COM;
DROP TABLE MR_TB_TMP_ACT_OBR_COD_FICHA_RES;
DROP TABLE MR_TB_TMP_CLASIFICACION_USOS;
DROP TABLE MR_TB_TMP_COMBINACION_USOS;
DROP TABLE MR_TB_TMP_DOMINIO_CAPITULO_OBRA;
DROP TABLE MR_TB_TMP_MATERIAL_MANO_OBRA;
DROP TABLE MR_TB_TMP_PUNTAJE_DEPRECIACION;
DROP TABLE MR_TB_LIQUIDACION;
DROP TABLE MR_TB_PROCESO_LIQUIDACION;
DROP TABLE MR_TB_REGLA_PRELIMINAR;
DROP TABLE MR_TB_VIGENCIA;




TRUNCATE TABLE MR_TB_LISTADO_MATERIAL_MANO_OBRA ;
TRUNCATE TABLE MR_TB_COMBINACION_USOS ;
TRUNCATE TABLE MR_TB_CLASIFICACION_USOS ;
TRUNCATE TABLE MR_TB_ACT_OBR_COD_FICHA_RES ;
TRUNCATE TABLE MR_TB_ACT_OBR_COD_FICHA_COM ;
TRUNCATE TABLE MR_TB_ACTIVIDAD_OBRA_MATERIAL ;
TRUNCATE TABLE MR_TB_PUNTAJE_DEPRECIACION ;
TRUNCATE TABLE MR_TB_TMP_LIQ_CAPITULOS;
TRUNCATE TABLE MR_TB_DOMINIO_CAPITULO_OBRA;
TRUNCATE TABLE MR_TB_COSTO_DIRECTO_DETALLE;
TRUNCATE TABLE MR_TB_PROCESO_CARGUE_ANUAL;
TRUNCATE TABLE MR_TB_TMP_ACTIVIDAD_OBRA_MATERIAL;
TRUNCATE TABLE MR_TB_TMP_ACT_OBR_COD_FICHA_COM;
TRUNCATE TABLE MR_TB_TMP_ACT_OBR_COD_FICHA_RES;
TRUNCATE TABLE MR_TB_TMP_CLASIFICACION_USOS;
TRUNCATE TABLE MR_TB_TMP_COMBINACION_USOS;
TRUNCATE TABLE MR_TB_TMP_DOMINIO_CAPITULO_OBRA;
TRUNCATE TABLE MR_TB_TMP_MATERIAL_MANO_OBRA;
TRUNCATE TABLE MR_TB_TMP_PUNTAJE_DEPRECIACION;
TRUNCATE TABLE MR_TB_LIQUIDACION;
TRUNCATE TABLE MR_TB_PROCESO_LIQUIDACION;
TRUNCATE TABLE MR_TB_REGLA_PRELIMINAR;
TRUNCATE TABLE MR_TB_VIGENCIA;



SELECT 'MR_TB_LISTADO_MATERIAL_MANO_OBRA' AS T,COUNT(1) AS C FROM MR_TB_LISTADO_MATERIAL_MANO_OBRA 
UNION 
SELECT 'MR_TB_COMBINACION_USOS' AS T,COUNT(1) AS C FROM MR_TB_COMBINACION_USOS 
UNION 
SELECT 'MR_TB_CLASIFICACION_USOS' AS T ,COUNT(1) AS C FROM MR_TB_CLASIFICACION_USOS 
UNION 
SELECT 'MR_TB_ACT_OBR_COD_FICHA_RES' AS T ,COUNT(1)AS C  FROM MR_TB_ACT_OBR_COD_FICHA_RES 
UNION 
SELECT 'MR_TB_ACT_OBR_COD_FICHA_COM' AS T ,COUNT(1)AS C FROM MR_TB_ACT_OBR_COD_FICHA_COM 
UNION 
SELECT 'MR_TB_ACTIVIDAD_OBRA_MATERIAL' AS T ,COUNT(1)AS C FROM MR_TB_ACTIVIDAD_OBRA_MATERIAL 
UNION 
SELECT 'MR_TB_PUNTAJE_DEPRECIACION' AS T ,COUNT(1)AS C FROM MR_TB_PUNTAJE_DEPRECIACION ;

EXPLAIN PLAN FOR
SELECT * 
FROM MR_TB_LISTADO_MATERIAL_MANO_OBRA g 
WHERE g.id_materiales = 'VEPE_45';

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

*/

--#TABLA
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_VIGENCIA'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_VIGENCIA 
		(
			ID 							NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ANIO 						NUMBER(4) NOT NULL ,
			SMMLV 						NUMBER(18,2),
			USUARIO						VARCHAR2(255),
			FECHA_VALIDACION			TIMESTAMP WITH LOCAL TIME ZONE,
			FECHA_ACTUALIZACION			TIMESTAMP WITH LOCAL TIME ZONE,
			ESTADO 						VARCHAR2(250)
		) TABLESPACE TS_SIICDAT 
       ';
    END IF;
END;


/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_CLASIFICACION_USOS'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_CLASIFICACION_USOS 
		(
			ID_USO 						NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			CODIGO_USO 					CHAR(3) NOT NULL ,
			GRUPO_ESTADO_CONSERVACION 	VARCHAR2(20) NOT NULL,
			GRUPO_USO_PRESUPUESTO 		VARCHAR2(25) NOT NULL,
			GRUPO_USO_CANTIDAD			NUMBER NULL,
			VIGENCIA 					NUMBER NULL,
			GRUPO_CATEGORIA_PROYECTO    NUMBER(1) NOT NULL,
			CONSTRAINT UK_CODIGO_USO_VIGENCIA UNIQUE (CODIGO_USO, VIGENCIA)
		) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;


/
--#TABLA
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_COMBINACION_USOS'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_COMBINACION_USOS 
		(
			ID_COMBINACION 				NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			CODIGO_USO_PREDOMINANTE 	CHAR(3) NOT NULL,
			CODIGO_USO_01 				CHAR(3) NOT NULL,
			CODIGO_USO_02 				CHAR(3) NOT NULL,  
			CODIGO_USO_03 				CHAR(3),  -- Opcional
			GRUPO_USO_PRESUPUESTO 		VARCHAR2(50) NOT NULL,
			VIGENCIA 					NUMBER NULL
		) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;

/
--ALTER TABLE MR_TB_COMBINACIONES_USOS ADD CONSTRAINT FK_CU_PRED   FOREIGN KEY (CODIGO_USO_PREDOMINANTE) REFERENCES MR_TB_CLASIFICACION_USOS(CODIGO_USO);
--ALTER TABLE MR_TB_COMBINACIONES_USOS ADD CONSTRAINT FK_CU_USO_01 FOREIGN KEY (CODIGO_USO_01) REFERENCES MR_TB_CLASIFICACION_USOS(CODIGO_USO);
--ALTER TABLE MR_TB_COMBINACIONES_USOS ADD CONSTRAINT FK_CU_USO_02 FOREIGN KEY (CODIGO_USO_02) REFERENCES MR_TB_CLASIFICACION_USOS(CODIGO_USO);
--ALTER TABLE MR_TB_COMBINACIONES_USOS ADD CONSTRAINT FK_CU_USO_03 FOREIGN KEY (CODIGO_USO_03) REFERENCES MR_TB_CLASIFICACION_USOS(CODIGO_USO);

DECLARE
    v_exists NUMBER;
BEGIN
    -- FK_CU_PRED
    SELECT COUNT(*) INTO v_exists
    FROM user_constraints
    WHERE constraint_name = 'FK_CU_PRED';

    IF v_exists = 0 THEN
        EXECUTE IMMEDIATE '
            ALTER TABLE MR_TB_COMBINACION_USOS 
            ADD CONSTRAINT FK_CU_PRED 
            FOREIGN KEY (CODIGO_USO_PREDOMINANTE, VIGENCIA) 
            REFERENCES MR_TB_CLASIFICACION_USOS(CODIGO_USO, VIGENCIA)';
    END IF;

    -- FK_CU_USO_01
    SELECT COUNT(*) INTO v_exists
    FROM user_constraints
    WHERE constraint_name = 'FK_CU_USO_01';

    IF v_exists = 0 THEN
        EXECUTE IMMEDIATE '
            ALTER TABLE MR_TB_COMBINACION_USOS 
            ADD CONSTRAINT FK_CU_USO_01 
            FOREIGN KEY (CODIGO_USO_01, VIGENCIA) 
            REFERENCES MR_TB_CLASIFICACION_USOS(CODIGO_USO, VIGENCIA)';
    END IF;

    -- FK_CU_USO_02
    SELECT COUNT(*) INTO v_exists
    FROM user_constraints
    WHERE constraint_name = 'FK_CU_USO_02';

    IF v_exists = 0 THEN
        EXECUTE IMMEDIATE '
            ALTER TABLE MR_TB_COMBINACION_USOS 
            ADD CONSTRAINT FK_CU_USO_02 
            FOREIGN KEY (CODIGO_USO_02, VIGENCIA) 
            REFERENCES MR_TB_CLASIFICACION_USOS(CODIGO_USO, VIGENCIA)';
    END IF;

    -- FK_CU_USO_03
    -- SELECT COUNT(*) INTO v_exists
    -- FROM user_constraints
    -- WHERE constraint_name = 'FK_CU_USO_03';

    -- IF v_exists = 0 THEN
        -- EXECUTE IMMEDIATE '
            -- ALTER TABLE MR_TB_COMBINACION_USOS 
            -- ADD CONSTRAINT FK_CU_USO_03 
            -- FOREIGN KEY (CODIGO_USO_03, VIGENCIA) 
            -- REFERENCES MR_TB_CLASIFICACION_USOS(CODIGO_USO, VIGENCIA)';
    -- END IF;
END;


/
DECLARE
  v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count
  FROM user_indexes
  WHERE index_name = 'IDX_COMB_USOS_01_02_03';

  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE INDEX IDX_COMB_USOS_01_02_03 
                       ON MR_TB_COMBINACION_USOS(CODIGO_USO_01, CODIGO_USO_02, CODIGO_USO_03, VIGENCIA)';
  END IF;
END;



/
--#TABLA
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_ACT_OBR_COD_FICHA_RES'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_ACT_OBR_COD_FICHA_RES 
		(
			ID_ACT_OBR_RES 				NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_ACTIVIDAD_OBRA 			VARCHAR2(255) NOT NULL,
			DESCRIPCION_ACTIVIDAD_OBRA 	VARCHAR2(255) NOT NULL,
			CODIGO_FICHA 				CHAR(3) NOT NULL,
			VIGENCIA 					NUMBER NULL
		) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;
/
DECLARE
  v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count
  FROM user_indexes
  WHERE index_name = 'IDX_ID_ACTIVIDAD_OBRA';

  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE INDEX IDX_ID_ACTIVIDAD_OBRA ON MR_TB_ACT_OBR_COD_FICHA_RES(ID_ACTIVIDAD_OBRA, VIGENCIA)';
  END IF;
END;


/
--#TABLA
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_ACT_OBR_COD_FICHA_COM'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_ACT_OBR_COD_FICHA_COM 
		(
			ID_ACT_OBR_COM 				NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_ACTIVIDAD_OBRA 			VARCHAR2(255) NOT NULL,
			DESCRIPCION_ACTIVIDAD_OBRA 	VARCHAR2(255) NOT NULL,
			CODIGO_FICHA 				CHAR(3) NOT NULL,
			VIGENCIA 					NUMBER NULL
		) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;
/
DECLARE
  v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count
  FROM user_indexes
  WHERE index_name = 'IDX_ID_ACTIVIDAD_OBRA_1';

  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE INDEX IDX_ID_ACTIVIDAD_OBRA_1 ON MR_TB_ACT_OBR_COD_FICHA_COM(ID_ACTIVIDAD_OBRA, VIGENCIA)';
  END IF;
END;

/
--#TABLA
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_ACTIVIDAD_OBRA_MATERIAL'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

	CREATE TABLE MR_TB_ACTIVIDAD_OBRA_MATERIAL 
	(
		ID_ACT_OBRA_MAT 			NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		CAPITULO_OBRA 				NUMBER(2)     NOT NULL,
		ID_ACTIVIDAD_OBRA 			VARCHAR2(250) NOT NULL,
		UNIDAD_MEDIDA_ACT_OBRA 		VARCHAR2(250) NOT NULL,
		ID_MATERIAL 				VARCHAR2(50)  NOT NULL,
		CANTIDAD_MATERIAL 			NUMBER 		  NOT NULL ,
		VIGENCIA 					NUMBER 		  NOT NULL
	) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;

/
DECLARE
  v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count
  FROM user_indexes
  WHERE index_name = 'IDX_ID_MATERIAL_1';

  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE INDEX IDX_ID_MATERIAL_1 ON MR_TB_ACTIVIDAD_OBRA_MATERIAL(ID_MATERIAL, VIGENCIA)';
  END IF;
END;


/
--#TABLA
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_PUNTAJE_DEPRECIACION'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

	CREATE TABLE MR_TB_PUNTAJE_DEPRECIACION 
	(
		ID_PUNTAJE 							NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		VARIABLE_CALIFICACION 				VARCHAR2(250) NOT NULL,
		CODIGO_FICHA 						CHAR(3) NOT NULL,
		PUNTAJE_CONSERVACION_RESIDENCIAL 	NUMBER DEFAULT 0,
		PUNTAJE_CONSERVACION_COMERCIAL 		NUMBER DEFAULT 0,
		PUNTAJE_CONSERVACION_INDUSTRIAL 	NUMBER DEFAULT 0,
		VIGENCIA 							NUMBER NULL
	) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;

/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_LISTADO_MATERIAL_MANO_OBRA'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_LISTADO_MATERIAL_MANO_OBRA 
		(
			ID 							NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_MATERIAL 				VARCHAR2(50),
			DESCRIPCION_MATERIAL 		VARCHAR2(255),
			UNIDAD_MEDIDA_MATERIAL 	    VARCHAR2(10),
			COSTO_UNITARIO_MATERIAL 	NUMBER,
			FUENTE 						VARCHAR2(250),
			EDICION 					VARCHAR2(50),
			PAGINA 						VARCHAR2(50),
			VIGENCIA 					NUMBER NULL
        ) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;
/
--ALTER TABLE MR_TB_LISTADO_MATERIALES_MANO_OBRA ADD CONSTRAINT FK_ID_MATER   FOREIGN KEY (ID_MATERIALES) REFERENCES MR_TB_ACTIVIDAD_OBRA_MATERIALES(ID_MATERIALES);
DECLARE
  v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count
  FROM user_indexes
  WHERE index_name = 'IDX_LISTADO_MATERIAL_ID';

  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE INDEX IDX_LISTADO_MATERIAL_ID ON MR_TB_LISTADO_MATERIAL_MANO_OBRA(ID_MATERIAL, VIGENCIA)';
  END IF;
END;
/

DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_REGLA_PRELIMINAR'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_REGLA_PRELIMINAR 
		(
			ID_REGLA               NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_ACTIVIDAD_OBRA      VARCHAR2(50), 									--Codigo de Actividad PRELIM_01            						
			TIPO_ACTIVIDAD		   NUMBER,											--0:Otro , 1: Comercial , 2: Residencial 	
			TIPO_PRESUPUESTO       NUMBER,     										--1:Presupuesto Independiente, 2: Presupuesto Predominante              
			CONDICION              VARCHAR2(4000),           
			FORMULA                VARCHAR2(4000),           
			DESCRIPCION_REGLA      VARCHAR2(1000),           
			ORDEN_EVALUACION       NUMBER NULL,              
			VIGENCIA               NUMBER NULL,              
			ACTIVO                 NUMBER DEFAULT 1          
		) TABLESPACE TS_SIICDAT 
       ';
    
	   EXECUTE IMMEDIATE 'CREATE INDEX IDX_REGLAS_ESC_VIG_ACT ON MR_TB_REGLA_PRELIMINAR (ID_ACTIVIDAD_OBRA,TIPO_ACTIVIDAD,TIPO_PRESUPUESTO,VIGENCIA,ACTIVO)';	
	END IF;
END;

/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_COSTO_DIRECTO_DETALLE'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_COSTO_DIRECTO_DETALLE 
		(
			ID               	   NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_LIQUIDACION         NUMBER NULL,
			CODIGO_FICHA		   VARCHAR2 (4000),	
			TIPO_ACTIVIDAD    	   NUMBER NULL,	
			TIPO_PRESUPUESTO  	   NUMBER NULL,	
			CAPITULO_OBRA          NUMBER NULL,
			ID_ACTIVIDAD_OBRA      VARCHAR2(300) NULL,	
			SUBTOTAL_CAPITULO      NUMBER NULL,
			CANTIDAD_OBRA		   NUMBER NULL,	
			FECHA_HORA 			   TIMESTAMP DEFAULT CURRENT_TIMESTAMP
		) TABLESPACE TS_SIICDAT 
       ';
    
	   
	END IF;
END;


/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_PROCESO_LIQUIDACION'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_PROCESO_LIQUIDACION
 		(
			ID               	   	NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			FECHA 					TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT SYSDATE NOT NULL,
			VIGENCIA 				NUMBER(4),
			CHIP 					VARCHAR2(20),
			CODIGO_BARRIO 			CHAR(6),
			CODIGO_MANZANA 			CHAR(2), 
			CODIGO_PREDIO 			CHAR(2), 
			CODIGO_CONSTRUCCION 	CHAR(3), 
			CODIGO_RESTO 			CHAR(5)
		) TABLESPACE TS_SIICDAT 
       ';
	END IF;
END;




/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_PROCESO_LIQUIDACION'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_PROCESO_LIQUIDACION
 		(
			ID               	   	NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			FECHA 					TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT SYSDATE NOT NULL,
			VIGENCIA 				NUMBER(4),
			CHIP 					VARCHAR2(20),
			CODIGO_BARRIO 			CHAR(6),
			CODIGO_MANZANA 			CHAR(2), 
			CODIGO_PREDIO 			CHAR(2), 
			CODIGO_CONSTRUCCION 	CHAR(3), 
			CODIGO_RESTO 			CHAR(5)
		) TABLESPACE TS_SIICDAT 
       ';
	END IF;
END;

/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_LIQUIDACION'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_LIQUIDACION 
		(
			ID               	   		NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_PROCESO_LIQUIDACION      NUMBER NOT NULL,
            VIGENCIA                    NUMBER NOT NULL,
            CHIP                        VARCHAR2(20),
            CODIGO_BARRIO               CHAR(6), 
            CODIGO_MANZANA              CHAR(2),
            CODIGO_PREDIO               CHAR(2),
            CODIGO_CONSTRUCCION         CHAR(3),
            CODIGO_RESTO                CHAR(5),
            UNIDADES_VALIDAS            NUMBER(2),
            CLASE_CONSTRUCCION          CHAR(1),
            UNIDAD_CALIFICADA           CHAR(1),
            CODIGO_USO                  CHAR(3),
            CODIGO_UNIDAD               CHAR(5),
            GRUPO_ESTADO_CONSERVACION   VARCHAR2(20),
            GRUPO_USO_PRESUPUESTO       VARCHAR2(25),
            GRUPO_USO_CANTIDAD          NUMBER,
            GRUPO_CATEGORIA_PROYECTO    NUMBER(1),
            USO_PRESUPUESTO             VARCHAR2(25),
            TIPO_PRESUPUESTO            NUMBER(1),
            ESTRATO_PREDIO              NUMBER(1),
            ESTRATO_SOCIOECONOMICO      NUMBER(1),
            AREA_USO                    NUMBER(16,2),
            MAX_AREA_USO                NUMBER(16,2),
            TOTAL_AREA_CONSTRUIDA       NUMBER(16,2),
            MAX_NUM_PISOS               NUMBER(2),
            N_SOTANOS                   NUMBER(2),
            ARMAZON_ESTRUCTURA          CHAR(3),
            MUROS_ESTRUCTURA            CHAR(3),
            CUBIERTA_ESTRUCTURA         CHAR(3),
            CONSERVACION_ESTRUCTURA     CHAR(3),
            FACHADA_ACABADOS            CHAR(3),
            CUBIERTA_MUROS_ACABADOS     CHAR(3),
            PISOS_ACABADOS              CHAR(3),
            CONSERVACION_ACABADOS       CHAR(3),
            TAMANO_BANO                 CHAR(3),
            ENCHAPE_BANO                CHAR(3),
            MOBILIARIO_BANO             CHAR(3),
            CONSERVACION_BANO           CHAR(3),
            TAMANO_COCINA               CHAR(3),
            ENCHAPE_COCINA              CHAR(3),
            MOBILIARIO_COCINA           CHAR(3),
            CONSERVACION_COCINA         CHAR(3),
            COMPLEMENTO_INDUSTRIA       CHAR(3),
            ALTURA_CERCHAS              CHAR(3),
            ANO_CONSTRUCCION            NUMBER(4),
            UNIDAD_PREVALENTE           CHAR(5),
            USOS_ORDENADOS              VARCHAR2(255),
            COMBINACIONES_USOS          VARCHAR2(255),
            USO_PRESUPUESTO_COMBINACION VARCHAR2(50),
            TIENE_USO_ESPECIAL          NUMBER(1),
            GENERAR_PRESUPUESTO         NUMBER(1) DEFAULT 0 NOT NULL,
            AREA_PRIMER_PISO            NUMBER(16,2),
            FRENTE                      NUMBER(16,2),
            FONDO                       NUMBER(16,2),
            N_UNIDADES_USO_PRINCIPAL    NUMBER,
            AREA_TIPO_UNIDAD_USO        NUMBER(16,2),
            N_UNIDADES_USO              NUMBER,
            N_ESPACIOS                  NUMBER,
            N_BANOS                     NUMBER,
            N_COCINAS                   NUMBER,
            N_PISOS                     NUMBER,
            COSTO_DIRECTO_TOTAL         NUMBER,
            COSTO_DIRECTO_UNITARIO      NUMBER,
            CARGO_FIJO                  NUMBER,
            CARGO_VARIABLE              NUMBER,
            FACTOR_I                    NUMBER,
            FACTOR_J                    NUMBER,
            IMPUESTO_DELINEACION        NUMBER,
            EXPENSA_FIJA                NUMBER,
            EXPENSA_VARIABLE            NUMBER,
            HONORARIOS_CONSTRUCCION     NUMBER,
            HONORARIOS_PROYECTO         NUMBER,
            HONORARIOS_DISENOS          NUMBER,
            COSTO_INDIRECTO_TOTAL       NUMBER,
            COSTO_INDIRECTO_UNITARIO    NUMBER,
			VETUSTEZ 					NUMBER(4),
			ESTADO_CONSERVACION 		NUMBER(2,1),
			VIDA_UTIL 					NUMBER(4),
			PORCENTAJE_DEPRECIACION 	NUMBER,
			VALOR_DEPRECIADO 			NUMBER,
			VALOR_COMERCIAL_CONSTRUCCION NUMBER,
			ESTADO_LIQUIDACION NUMBER(1) DEFAULT 0 NOT NULL,
			DETALLE_ERROR 				 VARCHAR2(4000),
			CONSTRAINT FK_PROCESO_LIQUIDACION FOREIGN KEY (ID_PROCESO_LIQUIDACION) REFERENCES MR_TB_PROCESO_LIQUIDACION (ID) 
		) TABLESPACE TS_SIICDAT 
       ';
	END IF;
END;



/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_PROCESO_CARGUE_ANUAL'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_PROCESO_CARGUE_ANUAL 
		(
			ID               	NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_VIGENCIA 		NUMBER NOT NULL, 
			USUARIO 			VARCHAR2(255 BYTE) NOT NULL, 
			PERFIL 				VARCHAR2(255 BYTE) NOT NULL, 
			RUTA_ARCHIVO 		VARCHAR2(255 BYTE), 
			FECHA_INICIO 		TIMESTAMP WITH LOCAL TIME ZONE NOT NULL, 
			FECHA_VENCIMIENTO 	TIMESTAMP WITH LOCAL TIME ZONE NOT NULL,
			FECHA_CIERRE 		TIMESTAMP WITH LOCAL TIME ZONE, 
			ESTADO 				VARCHAR2(250 BYTE) NOT NULL,
			CONSTRAINT FK_VIGENCIA FOREIGN KEY (ID_VIGENCIA) REFERENCES MR_TB_VIGENCIA (ID) 
		) TABLESPACE TS_SIICDAT 
       ';
    
	   
	END IF;
END;


/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_DOMINIO_CAPITULO_OBRA'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_DOMINIO_CAPITULO_OBRA 
		(
			ID               	   NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			CAPITULO_OBRA		   NUMBER(2) 	  NOT NULL,
			DESCRIPCION_CAPITULO   VARCHAR2(250)  NOT NULL,
			VIGENCIA			   NUMBER(4) 	  NOT NULL	
		) TABLESPACE TS_SIICDAT 
       ';
    
	   
	END IF;
END;

/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_DOMINIO_CAPITULO_OBRA'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_TMP_DOMINIO_CAPITULO_OBRA 
		(
			ID               	   NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			CAPITULO_OBRA		   NUMBER(2) 	  NOT NULL,
			DESCRIPCION_CAPITULO   VARCHAR2(250)  NOT NULL
		) TABLESPACE TS_SIICDAT 
       ';
    
	   
	END IF;
END;


/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_ACTIVIDAD_OBRA_MATERIAL'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_TMP_ACTIVIDAD_OBRA_MATERIAL 
		(
			ID               	   	NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			CAPITULO_OBRA 			NUMBER(2) 	  NOT NULL ENABLE, 
			ID_ACTIVIDAD_OBRA 		VARCHAR2(250) NOT NULL ENABLE, 
			UNIDAD_MEDIDA_ACT_OBRA 	VARCHAR2(250) NOT NULL ENABLE, 
			ID_MATERIAL 			VARCHAR2(50)  NOT NULL ENABLE, 
			CANTIDAD_MATERIAL 		NUMBER DEFAULT 0.00
		) TABLESPACE TS_SIICDAT 
       ';
	END IF;
END;


/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_ACT_OBR_COD_FICHA_COM'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_TMP_ACT_OBR_COD_FICHA_COM 
		(
			ID 							NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_ACTIVIDAD_OBRA 			VARCHAR2(255) NOT NULL,
			DESCRIPCION_ACTIVIDAD_OBRA 	VARCHAR2(255) NOT NULL,
			CODIGO_FICHA 				CHAR(3) NOT NULL
		) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;

/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_ACT_OBR_COD_FICHA_RES'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_TMP_ACT_OBR_COD_FICHA_RES 
		(
			ID 							NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_ACTIVIDAD_OBRA 			VARCHAR2(255) NOT NULL,
			DESCRIPCION_ACTIVIDAD_OBRA 	VARCHAR2(255) NOT NULL,
			CODIGO_FICHA 				CHAR(3) NOT NULL
		) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;


/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_CLASIFICACION_USOS'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_TMP_CLASIFICACION_USOS 
		(
			ID 							NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			CODIGO_USO 					CHAR(3) NOT NULL ,
			GRUPO_ESTADO_CONSERVACION 	VARCHAR2(20) NOT NULL,
			GRUPO_USO_PRESUPUESTO 		VARCHAR2(25) NOT NULL,
			GRUPO_USO_CANTIDAD			NUMBER NULL,
			GRUPO_CATEGORIA_PROYECTO    NUMBER NOT NULL
		) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;


/
--#TABLA
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_COMBINACION_USOS'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

		CREATE TABLE MR_TB_TMP_COMBINACION_USOS 
		(
			ID 							NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			CODIGO_USO_PREDOMINANTE 	CHAR(3) NOT NULL,
			CODIGO_USO_01 				CHAR(3) NOT NULL,
			CODIGO_USO_02 				CHAR(3) NOT NULL,  
			CODIGO_USO_03 				CHAR(3),  -- Opcional
			GRUPO_USO_PRESUPUESTO 		VARCHAR2(50) NOT NULL
		) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;



/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_DOMINIO_CAPITULO_OBRA'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_TMP_DOMINIO_CAPITULO_OBRA 
		(
			ID               	   NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			CAPITULO_OBRA		   NUMBER(2) 	  NOT NULL,
			DESCRIPCION_CAPITULO   VARCHAR2(250)  NOT NULL,
			CONSTRAINT UK_TMP_DOMINIO_CAPITULO_OBRA_CODIGO UNIQUE (CAPITULO_OBRA)
		) TABLESPACE TS_SIICDAT 
       ';
    
	   
	END IF;
END;


/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_MATERIAL_MANO_OBRA'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE TABLE MR_TB_TMP_MATERIAL_MANO_OBRA 
		(
			ID               	   	NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
			ID_MATERIAL 			VARCHAR2(50), 
			DESCRIPCION_MATERIAL 	VARCHAR2(255), 
			UNIDAD_MEDIDA_MATERIAL 	VARCHAR2(10), 
			COSTO_UNITARIO_MATERIAL NUMBER, 
			FUENTE 					VARCHAR2(250), 
			EDICION 				VARCHAR2(50), 
			PAGINA 					VARCHAR2(50)
		) TABLESPACE TS_SIICDAT 
       ';
    
	   
	END IF;
END;


/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_PUNTAJE_DEPRECIACION'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

	CREATE TABLE MR_TB_TMP_PUNTAJE_DEPRECIACION 
	(
		ID 									NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		VARIABLE_CALIFICACION 				VARCHAR2(250) NOT NULL,
		CODIGO_FICHA 						CHAR(3) NOT NULL,
		PUNTAJE_CONSERVACION_RESIDENCIAL 	NUMBER DEFAULT 0,
		PUNTAJE_CONSERVACION_COMERCIAL 		NUMBER DEFAULT 0,
		PUNTAJE_CONSERVACION_INDUSTRIAL 	NUMBER DEFAULT 0
	) TABLESPACE TS_SIICDAT 
    
       ';
    END IF;
END;





----TABLA TEMPORAL  GLOBAL TEMPORARY
/
DECLARE
    v_table_exists NUMBER := 0;
BEGIN
    SELECT COUNT(*)
    INTO v_table_exists
    FROM all_tables
    WHERE table_name = 'MR_TB_TMP_LIQ_CAPITULOS'
    AND owner = USER;

    IF v_table_exists = 0 THEN
        EXECUTE IMMEDIATE '

        CREATE GLOBAL TEMPORARY TABLE MR_TB_TMP_LIQ_CAPITULOS
		(
			ID_LIQUIDACION    NUMBER,
			CODIGO_FICHA      VARCHAR2(4000),
			TIPO_ACTIVIDAD    NUMBER,
			TIPO_PRESUPUESTO  NUMBER,
			CAPITULO_OBRA     NUMBER NULL,
			ID_ACTIVIDAD_OBRA VARCHAR2(300),	
			SUBTOTAL_CAPITULO NUMBER,
			CANTIDAD_OBRA     NUMBER
		) ON COMMIT DELETE ROWS
       ';
    
	   
	END IF;
END;


